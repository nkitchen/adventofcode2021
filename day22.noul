#!/usr/bin/env noulith

DEBUG := 0;
TEST := 0;
import "aoc.noul";

reboot_steps := \filename -> (
    steps := [];
    for (line <- read_file(filename).lines) (
        sense, coords := line.words;
        xmin, xmax, ymin, ymax, zmin, zmax := coords.ints;
        lo := [xmin, ymin, zmin];
        hi := [xmax, ymax, zmax];
        steps append= [sense, [lo, hi]];
    );
    steps
);

csize := \c -> (
    lo, hi := c;
    d := (hi zip - zip lo) zip (+ 1);
    d zip (max 0) fold *
);

cubisect := \c, d -> (
    [c[0] zip max zip d[0],
     c[1] zip min zip d[1]]
);

reboot_cubes := \steps -> (
    # Thanks to https://github.com/Dullstar/Advent_Of_Code/blob/main/python/year2021/day22.py
    n := 0;
    cs := [];
    for ([sense, c] <- steps.reverse) (
        if (sense == "on") (
            steps' := [];
            for (c' <- cs) (
                x := c cubisect c';
                if (x.csize > 0) (
                    steps' append= ["on", x];
                );
            );
            n += c.csize - reboot_cubes(steps');
        );
        cs append= c;
    );
    n
);

init_cubes := \filename -> (
    steps := reboot_steps(filename);
    init_region := [(-50) .* 3, 50 .* 3];
    steps' := steps map (\[sense, c] -> [sense, c cubisect init_region]);
    reboot_cubes(steps')
);

solve := \ -> (
    f := "in22.txt";
    n := init_cubes(f);
    print(n);
    steps := reboot_steps(f);
    n = reboot_cubes(steps);
    print(n);
);

if (TEST) (
    import "test22.noul";
    test();
) else (
    solve();
);

# 6s
