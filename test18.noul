test_add := \ -> (
    cases := [
        {
            'addends': [
                [[[[4,3],4],4],[7,[[8,4],9]]],
                [1, 1]
            ],
            'want': [[[[0,7],4],[[7,8],[6,0]]],[8,1]]
        },
        {
            'addends': [
                [1, 1],
                [2, 2],
                [3, 3],
                [4, 4]
            ],
            'want': [[[[1,1],[2,2]],[3,3]],[4,4]]
        },
        {
            'addends': [
                [1, 1],
                [2, 2],
                [3, 3],
                [4, 4],
                [5, 5],
            ],
            'want': [[[[3,0],[5,3]],[4,4]],[5,5]]
        },
        {
            'addends': [
                [1, 1],
                [2, 2],
                [3, 3],
                [4, 4],
                [5, 5],
                [6, 6],
            ],
            'want': [[[[5,0],[7,4]],[5,5]],[6,6]],
        },
        {
            'addends': [
                [[[0,[4,5]],[0,0]],[[[4,5],[2,6]],[9,5]]],
                [7,[[[3,7],[4,3]],[[6,3],[8,8]]]],
                # TODO: Debug this first addition
                #(
[[[[0, [4, 5]], [0, 0]], [[[4, 5], [2, 6]], [9, 5]]], [7, [[[3, 7], [4, 3]], [[6, 3], [8 , 8]]]]]
1234   5    
[[[[4, 0     ], [5, 0]], [[[4, 5], [2, 6]], [9, 5]]], [7, [[[3, 7], [4, 3]], [[6, 3], [8 , 8]]]]]
1234         3  4    32  345
[[[[4, 0     ], [5, 4]], [[0     , [7, 6]], [9, 5]]], [7, [[[3, 7], [4, 3]], [[6, 3], [8 , 8]]]]]
1234         3  4    32  34        5
[[[[4, 0     ], [5, 4]], [[7     , 0     ], [15, 5]]], [7, [[[3, 7], [4, 3]], [[6, 3], [8 , 8]]]]]
                )
                [[2,[[0,8],[3,4]]],[[[6,7],1],[7,[1,6]]]],
                [[[[2,4],7],[6,[0,5]]],[[[6,8],[2,8]],[[2,1],[4,5]]]],
                [7,[5,[[3,8],[1,4]]]],
                [[2,[2,2]],[8,[8,1]]],
                [2,9],
                [1,[[[9,3],9],[[9,0],[0,7]]]],
                [[[5,[7,4]],7],1],
                [[[[4,2],2],6],[8,7]],
            ],
            'want': [[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]]
        },
    ];

    for (tc <- cases) (
        addends := tc['addends'];
        want := tc['want'];
        c := addends fold sf_add;
        try assert (c == want)
        catch _ -> (
            print("Addends:");
            for (x <- addends) print(x);
            print("Got: ", c);
            print("Want:", want);
            for (x <- addends scan sf_add) print(x);
        )
    )
);

test_mag := \ -> (
    cases := [ [
            [[1,2],[[3,4],5]], 
            143,
        ], [
            [[[[0,7],4],[[7,8],[6,0]]],[8,1]], 
            1384,
        ], [
            [[[[1,1],[2,2]],[3,3]],[4,4]], 
            445,
        ], [
            [[[[3,0],[5,3]],[4,4]],[5,5]], 
            791,
        ], [
            [[[[5,0],[7,4]],[5,5]],[6,6]], 
            1137,
        ], [
            [[[[8,7],[7,7]],[[8,6],[7,7]]],[[[0,7],[6,6]],[8,7]]], 
            3488,
        ], [
            [[[[6,6],[7,6]],[[7,7],[7,0]]],[[[7,7],[7,7]],[[7,8],[9,9]]]],
            4140,
        ] ];
    for (x, want <- cases) (
        got := sf_mag(x);
        assert (got == want);
    );

    nums := [
        [[[0,[5,8]],[[1,7],[9,6]]],[[4,[1,2]],[[1,4],2]]],
        [[[5,[2,8]],4],[5,[[9,9],0]]],
        [6,[[[6,2],[5,6]],[[7,6],[4,7]]]],
        [[[6,[0,7]],[0,9]],[4,[9,[9,0]]]],
        [[[7,[6,4]],[3,[1,3]]],[[[5,5],1],9]],
        [[6,[[7,3],[3,2]]],[[[3,8],[5,7]],4]],
        [[[[5,4],[7,7]],8],[[8,3],8]],
        [[9,3],[[9,9],[6,[4,9]]]],
        [[2,[[7,7],7]],[[5,8],[[9,3],[0,2]]]],
        [[[[5,2],5],[8,[3,7]]],[[5,[7,5]],[4,4]]],
    ];
    mags := pair_mags(nums);
    got := mags fold max;
    assert (got == 3993);
);

test := \ -> (
    test_add();
    test_mag();
);
